{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "minLength": 12,
        "metadata": {
          "description": "Password for the Virtual Machine."
        }
      },
      "publicIpName": {
        "type": "string",
        "defaultValue": "[resourceGroup().publicIpName]",
        "metadata": {
          "description": "Name for the Public IP used to access the Virtual Machine."
        }
      },
      "publicIpSku": {
        "type": "string",
        "defaultValue": "Basic",
        "allowedValues": [
          "Basic",
          "Standard"
        ],
        "metadata": {
          "description": "SKU for the Public IP used to access the Virtual Machine."
        }
      },
  
      "OSVersion": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "allowedValues": [
          "2008-R2-SP1",
          "2012-Datacenter",
          "2012-R2-Datacenter",
          "2016-Nano-Server",
          "2016-Datacenter-with-Containers",
          "2016-Datacenter",
          "2019-Datacenter",
          "2019-Datacenter-Core",
          "2019-Datacenter-Core-smalldisk",
          "2019-Datacenter-Core-with-Containers",
          "2019-Datacenter-Core-with-Containers-smalldisk",
          "2019-Datacenter-smalldisk",
          "2019-Datacenter-with-Containers",
          "2019-Datacenter-with-Containers-smalldisk"
        ],
        "metadata": {
          "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_B1s",
        // "allowedValues": [],
        "metadata": {
          "description": "Size of the virtual machine."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "VMName": {
        "type": "string",
        "defaultValue": "[concat('bootdiags', uniquestring(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the virtual machine."
        }
      },
      "networkInterfaceName": {
        "type": "string",
        "defaultValue": "[concat('bootdiags', uniquestring(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the virtual machine."
        }
      },
      "virtualNetworkName": {
        "type": "string",
         "defaultValue": "[concat('bootdiags', uniquestring(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the virtual network."
        }
      },
      "osDiskType": {
        "type": "string",
         "defaultValue": "[concat('bootdiags', uniquestring(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the disk type."
        }
      },
      "subnetName": {
        "type": "string",
        "defaultValue": "[concat('bootdiags', uniquestring(resourceGroup().id))]",
        "metadata": {
          "description": "subnet."
        }
      },
      "storageName": {
        "type": "string",
        "defaultValue": "[concat('bootdiags', uniquestring(resourceGroup().id))]",
        "metadata": {
          "description": "storage."
        }
      }
      
    },
    "variables": {
      "pipRef": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]",
      //"subnet1Ref": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnet1Name'))]",
      //"vnetId": //"[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
       // "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'),parameters('subnetName'))]",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
          //"[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[parameters('StorageName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-06-01",
        "name": "[parameters('networkInterfaceName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[variables('pipRef')]"
                  //"id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
                  
                },
                "subnet": { 
                  "id": "[variables('subnetRef')]"
                  //"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                  //"id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'), parameters('subnetName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-06-01",
        "name": "[parameters('VMName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[reference(parameters('networkInterfaceName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('VMName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "18.04-LTS",
                //"publisher": "MicrosoftWindowsServer",
                //"offer": "WindowsServer",
                //"sku": "[parameters('OSVersion')]",
                "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
                //"storageAccountType": "[parameters('osDiskType')]"
              },
              "diskSizeGB": 30
            }
            // "dataDisks": [
            //   {
            //     "diskSizeGB": 1023,
            //     "lun": 0,
            //     "createOption": "Empty"
            //   }
            // ]
          },
          "networkProfile": {
            "networkInterfaces": [
              { 
                "id": "[reference(parameters('networkInterfaceName'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true
              //"storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
            }
          }
        }
      }
    ],
    "outputs": {
      "virtualMachine": {
        "type": "object",
        "value": "[reference(parameters('VMName'))]"
      },
      "netInterfaceName": {
        "type": "object",
        "value": "[reference(parameters('networkInterfaceName'))]"
      },
      "ExistingIPA": {
        "type": "string",
        "value": "[reference(resourceId(parameters('publicIpName'), 'Microsoft.Network/publicIPAddresses', parameters('publicIpName')), '2020-07-01')]"
      },
      "ExistingVirtualNetworkName": {
        "type": "string",
        "value": "[reference(resourceId(parameters('virtualNetworkName'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '2020-05-01')]"
      },
      "ExistingSubnet": {
        "type": "string",
        "value": "[reference(resourceId(parameters('subnetName'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '2020-05-01')]"
      }

    }
  }